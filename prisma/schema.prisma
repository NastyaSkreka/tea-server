generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Role {
    USER
    ADMIN
}

model User {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    email    String @unique
    password String

    name       String @unique
    avatarPath String @default("/uploads/default-avatar.png") @map("avatar_path")

    phone String @default("")

    role      Role      @default(USER)
    favorites Product[]
    orders    Order[]
    reviews   Review[]
}

model Product {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    name        String @unique
    description String
    price       Int
    image       String
    miles       String
    time        String

    orderItems OrderItem[]

    user   User? @relation(fields: [userId], references: [id])
    userId Int?  @map("user_id")

    reviews Review[]
}

model Order {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    status EnumOrderStatus @default(PENDING)

    items OrderItem[]

    user   User @relation(fields: [userId], references: [id])
    userId Int  @map("user_id")
}

model OrderItem {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    quantity Int
    price    Int

    order   Order? @relation(fields: [orderId], references: [id])
    orderId Int?   @map("order_id")

    product   Product @relation(fields: [productId], references: [id])
    productId Int     @map("product_id")

    @@map("Order_item")
}

model Review {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    rating Int
    text   String

    user   User @relation(fields: [userId], references: [id])
    userId Int

    product   Product @relation(fields: [productId], references: [id])
    productId Int     @map("product_id")
}

enum EnumOrderStatus {
    PENDING
    PAYED
    SHIPPED
    DELIVERED
}
